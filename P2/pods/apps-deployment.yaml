apiVersion: apps/v1
kind: Deployment
metadata:
  name: app1-deployement
  labels:
    app: app1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app1 
  template:
    metadata:
      labels:
        app: app1
    spec:
      containers:
      - name: app1
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: app1-volume
      volumes:
      - name: app1-volume
        hostPath:
          path: /IOT/app-volumes/app1

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app2-deployement
  labels:
    app: app2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: app2 
  template:
    metadata:
      labels:
        app: app2
    spec:
      containers:
      - name: app2
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: app2-volume
      volumes:
      - name: app2-volume
        hostPath:
          path: /IOT/app-volumes/app2

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3-deployement
  labels:
    app: app3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app3 
  template:
    metadata:
      labels:
        app: app3
    spec:
      containers:
      - name: app3
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: app3-volume
      volumes:
      - name: app3-volume
        hostPath:
          path: /IOT/app-volumes/app3

---

apiVersion: v1
kind: Service
metadata:
  name: app1-service
spec:
  selector:
    app: app1
  ports:
    - protocol: TCP
      port: 80
      #port: 3000
      #targetPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: app2-service
spec:
  selector:
    app: app2
  ports:
    - protocol: TCP
      port: 80
      #port: 3000
      #targetPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: app3-service
spec:
  selector:
    app: app3
  ports:
    - protocol: TCP
      port: 80
      #port: 3000
      #targetPort: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
spec:
  rules:
  - host: "app1.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: service1
            port:
              #number: 3000
              number: 80
  - host: "app2.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: service2
            port:
              #number: 3000
              number: 80
  - host: "app3.com"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: service2
            port:
              #number: 3000
              number: 80